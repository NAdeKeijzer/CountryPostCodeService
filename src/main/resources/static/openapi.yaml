openapi: 3.1.0
info:
  title: Country Post Code Service
  version: 1.0.0
  description: >
    Simple API that returns a country's common name and postal code metadata.
    - GET /countries/{cca2}: read from in-memory DB (auto-fetches & saves if missing).
    - POST /countries/{cca2}: fetch from REST Countries API and save, then return.

servers:
  - url: http://localhost:8080

paths:
  /countries/{cca2}:
    get:
      summary: Get country info by CCA2 code
      description: Returns the common name, postal code format and regex.
      parameters:
        - name: cca2
          in: path
          required: true
          description: Two-letter ISO 3166-1 alpha-2 country code (case-insensitive)
          schema:
            type: string
            pattern: '^[A-Za-z]{2}$'
            example: NL
      responses:
        '200':
          description: Country found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryInfoResponse'
              examples:
                Netherlands:
                  value:
                    cca2: NL
                    name: Netherlands
                    postalFormat: "#### @@"
                    postalRegex: "^(\\d{4}[A-Z]{2})$"
                Colombia:
                  value:
                    cca2: CO
                    name: Colombia
                    postalFormat: null
                    postalRegex: null
        '404':
          description: Country not found (upstream 404 or missing in DB without auto-fetch, depending on implementation)
        '502':
          description: Upstream fetch error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: Add or refresh a country by CCA2 code (fetch & save)
      description: >
        Calls REST Countries (https://restcountries.com/v3.1/alpha/{code}?fields=name,postalCode,cca2),
        extracts name.common + postalCode fields, saves to the in-memory database, and returns the saved record.
      parameters:
        - name: cca2
          in: path
          required: true
          description: Two-letter ISO 3166-1 alpha-2 country code (case-insensitive)
          schema:
            type: string
            pattern: '^[A-Za-z]{2}$'
            example: CN
      responses:
        '200':
          description: Fetched and saved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryInfoResponse'
              examples:
                China:
                  value:
                    cca2: CN
                    name: China
                    postalFormat: "######"
                    postalRegex: "^(\\d{6})$"
        '404':
          description: Upstream returned 404 for the given code
        '502':
          description: Upstream fetch error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    CountryInfoResponse:
      type: object
      required: [cca2, name]
      properties:
        cca2:
          type: string
          description: ISO 3166-1 alpha-2 code
          pattern: '^[A-Z]{2}$'
          example: NL
        name:
          type: string
          description: Common country name
          example: Netherlands
        postalFormat:
          type: string
          nullable: true
          description: Human-friendly postal code format pattern, may be null
          example: "#### @@"
        postalRegex:
          type: string
          nullable: true
          description: Regex for validating a postal code, may be null
          example: "^(\\d{4}[A-Z]{2})$"
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: Upstream error
        message:
          type: string
          example: REST Countries returned 502 for /v3.1/alpha/NL?fields=name,postalCode,cca2
